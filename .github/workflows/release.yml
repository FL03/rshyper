name: release

concurrency:   
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTC_VERSION: 1.86.0

on:
  release:
    types: [ published ]
  repository_dispatch:
    types: [ release ]
  workflow_dispatch:
    inputs:
      environment:
        default: 'production'
        description: 'Deployment environment (e.g., production, staging)?'
        type: environment
      draft:
        default: false
        description: 'Create a draft release?'
        type: boolean
      prerelease:
        default: false
        description: 'Create a pre-release?'
        type: boolean
jobs:
  release:
    permissions:
      contents: read
      deployments: write
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        package:  [ rshyper-core, rshyper ]
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          cache-workspaces: true

